name: build-unity

on: [push]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
        unity: ['2018.3.12f1']
    container:
      # https://hub.docker.com/r/gableroux/unity3d/tags
      runs-on: ${{ matrix.os }}
      image: gableroux/unity3d:${{ matrix.unity }}-windows
    steps:
    - run: apt update && apt install git -y
    - uses: actions/checkout@v1
    # get activation file, if fail to activate unity, use this key and activate from https://license.unity3d.com/manual
    - run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -logFile -createManualActivationFile || exit 0
    - run: cat Unity_v${{ matrix.unity }}.alf # file name same as image's version
    # get from UNITY_LICENSE envvar(base64 encoded(cat foo.ulf | base64 )), this file is generated from above manual activation
    - run: echo ${UNITY_LICENSE} | base64 -di  >> .circleci/Unity.ulf
    - run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -manualLicenseFile .circleci/Unity.ulf || exit 0
    # Execute scripts(in Linux, currently does not supported IL2CPP so it run on mono)
    - name: Export unitypackage
      run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -projectPath . -executeMethod PackageExporter.Export
      working-directory: src/MagicOnion.Client.Unity
